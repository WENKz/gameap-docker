#!/usr/bin/env php
<?php

empty(getenv('DB_CONNECTION')) && putenv("DB_CONNECTION=sqlite");

# Workers settings
empty(getenv('HTTP_NUM_WORKERS')) && putenv("HTTP_NUM_WORKERS=4");

if (getenv('DB_CONNECTION') == 'sqlite') {

    $databaseFile = getenv('DB_DATABASE');
    if (empty($databaseFile)) {
        $databaseFile = "database.sqlite";
        putenv("DB_DATABASE=database.sqlite");
    }

    if (!file_exists($databaseFile) || filesize($databaseFile) == 0) {
        system('touch ' . $databaseFile);

        system('php artisan migrate --force');

        system('php artisan db:seed --class=ClientCertificatesTableSeeder');
        system('php artisan db:seed --class=GamesTableSeeder');
        system('php artisan db:seed --class=GameModsTableSeeder');
        system('php artisan db:seed --class=UsersTableSeeder');
        system('php artisan db:seed --class=PermissionsSeeder');
    } else {
        system('php artisan migrate');
    }
}
else if (getenv('DB_CONNECTION') == 'mysql') {
    $connectTries = 5;
    $sleepTime = 5;
    while ($connectTries > 0) {
        $connectTries--;

        try {
            $pdo = new PDO(
                'mysql:host=' . getenv('DB_HOST') . ';dbname=' . getenv('DB_DATABASE'),
                getenv('DB_USERNAME'),
                getenv('DB_PASSWORD')
            );

            break;
        } catch (PDOException $e) {
            echo "Waiting mysql...\n";

            sleep($sleepTime);
            $sleepTime *= 2;

            if ($connectTries <= 0) {
                echo "Error: " . $e->getMessage() . "\n";
                exit(1);
            }
        }
    }

    system('php artisan migrate --force');

    $count = $pdo->query("SELECT COUNT(*) as count FROM users;")->fetch(PDO::FETCH_ASSOC)['count'];

    if ($count == 0) {
        system('php artisan db:seed --class=ClientCertificatesTableSeeder');
        system('php artisan db:seed --class=GamesTableSeeder');
        system('php artisan db:seed --class=GameModsTableSeeder');
        system('php artisan db:seed --class=UsersTableSeeder');
        system('php artisan db:seed --class=PermissionsSeeder');
    }
}

$adminPassword = !empty(getenv('ADMIN_PASSWORD'))
            ? getenv('ADMIN_PASSWORD')
            : base64_encode(random_bytes(12));

system("php artisan user:change-password admin {$adminPassword}");

$rrConfigNumWorkers = getenv('HTTP_NUM_WORKERS');

$rrConfig = <<<YAML
rpc:
  listen: tcp://127.0.0.1:6001
server:
  command: "php ./vendor/bin/rr-worker start --relay-dsn unix:///var/www/gameap/rr-relay.sock"
  relay: "unix:///var/www/gameap/rr-relay.sock"
http:
  address: 0.0.0.0:8080
  static:
    dir: public
    forbid: [".php", ".htaccess"]
YAML;


file_put_contents('.rr.yaml', $rrConfig);

echo "\n--------------------------------------\n";
echo "GameAP starting...\n";

if (isset($adminPassword)) {
    echo "Admin login: admin\n";
    echo "Admin password: {$adminPassword}\n";
}

echo "\n--------------------------------------\n";
echo "\n\n";

system('./rr -c .rr.yaml serve -d');
